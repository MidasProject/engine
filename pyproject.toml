[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "MidasEngine"
version = "0.1.0"
description = "MidasProject의 메인 엔진"
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
  "fastapi",
  "ipykernel",
  "isort",
  "jupyter",
  "matplotlib",
  "nbqa",
  "nbstripout",
  "numpy",
  "openai",
  "openpyxl",
  "pandas",
  "pre-commit",
  "psycopg2-binary",
  "pyarrow",
  "pydantic",
  "python-dotenv",
  "requests",
  "ruff",
  "seaborn",
  "sqlalchemy",
  "tqdm",
  "typing-extensions",
  "uvicorn",
]

# ---------------------------
# Tooling configuration
# ---------------------------

[tool.setuptools.packages.find]
include = ["app*", "data*", "types*", "config*", "engine*"]

[tool.black]
line-length = 120
# Preserve encoding declarations for files with non-ASCII content
skip-string-normalization = true
target-version = ['py313']
# Force Black to preserve file encoding
preview = false

[tool.isort]
profile = "black"
line_length = 120

sections = ["STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
import_heading_stdlib = "Standard library imports"
import_heading_thirdparty = "Third-party imports"
import_heading_firstparty = "Local imports"

# Explicitly define what's local vs third-party
known_first_party = ["app", "config", "data", "engine", "types"]

force_sort_within_sections = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
order_by_type = false

[tool.ruff]
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP", "PL", "RUF"]
ignore = [
  "E203",  # Black-compatible slicing whitespace
  "E501",  # Let Black handle line length
  "UP009",  # keep encoding declarations
  # TEMPORARY IGNORES - TODO: Fix these complexity issues in future refactoring
  # "PLR0911",  # Too many return statements (> 6)
  # "PLR0912",  # Too many branches (> 12)
  # "PLR0913",  # Too many arguments (> 5)
  # "PLR0915",  # Too many statements (> 50)
]
